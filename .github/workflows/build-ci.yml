# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Android Soong build CI

on: [ push ]

jobs:
  cf_builder:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "2.7"

    - name: Restore Cache android12-gsi.tar.xz
      id: android12-gsi
      uses: actions/cache@v3
      with:
        path: android12-gsi.tar.xz
        key: android12-gsi
        restore-keys: android12-gsi
    - name: Clone repo
      if: steps.android12-gsi.outputs.cache-hit != 'true'
      run: |
         ./clone_repo
         tar --exclude="./out/" -caf android12-gsi.tar.xz -C aosp .
    - name: Extract tar
      if: steps.android12-gsi.outputs.cache-hit == 'true'
      run: |
         mkdir aosp && tar xf android12-gsi.tar.xz -C aosp

    - name: Start Soong
      run: |
        pushd aosp
        export TOP=$(pwd)
        git -C prebuilts/build-tools/ sparse-checkout set --no-cone '/*' '!/*/' 'linux-x86/bin' 'linux-x86/lib64' 'path' 'common'
        git -C prebuilts/build-tools/ sparse-checkout reapply
        git -C prebuilts/build-tools/ reset --hard HEAD
        git -C device/google/cuttlefish/ sparse-checkout set --no-cone '/*'
        git -C device/google/cuttlefish/ sparse-checkout reapply
        git -C prebuilts/build-tools/ reset --hard HEAD
        cp build/make/core/root.mk Makefile
        ln -sf make/CleanSpec.mk build/ && ln -sf make/core build/
        ln -sf make/target build/ && ln -sf make/tools build/
        ln -sf build/soong/root.bp Android.bp
        mkdir -p prebuilts/jdk && touch prebuilts/jdk/.find-ignore
        mkdir -p prebuilts/jdk/jdk8 && mkdir -p prebuilts/jdk/jdk11
        ln -sf $JAVA_HOME_8_X64 prebuilts/jdk/jdk8/linux-x86
        ln -sf $JAVA_HOME_11_X64 prebuilts/jdk/jdk11/linux-x86
        mkdir -p prebuilts/go && touch prebuilts/go/.find-ignore
        ln -sf $GOROOT_1_19_X64 prebuilts/go/linux-x86
        mkdir -p out/soong/.minibootstrap out/soong/.bootstrap/bin
        ln -sf $GITHUB_WORKSPACE/soong_build out/soong/.bootstrap/bin
        ln -sf $GITHUB_WORKSPACE/bpglob out/soong/.minibootstrap
        cp $GITHUB_WORKSPACE/ckati prebuilts/build-tools/linux-x86/bin
        sed -i 's/TARGET_ARCH_VARIANT := silvermont/TARGET_ARCH_VARIANT := x86_64/' device/google/cuttlefish/vsoc_x86_64/BoardConfig.mk
        sed -i 's/TARGET_2ND_ARCH_VARIANT := silvermont/TARGET_2ND_ARCH_VARIANT := x86_64/' device/google/cuttlefish/vsoc_x86_64/BoardConfig.mk
        sed -i 's/TARGET_2ND_CPU_VARIANT := silvermont/TARGET_2ND_CPU_VARIANT := x86/' device/google/cuttlefish/vsoc_x86_64/BoardConfig.mk
        GOROOT=`pwd`/prebuilts/go/linux-x86 TOP=`pwd` $GITHUB_WORKSPACE/soong_ui --make-mode --skip-ninja --skip-soong-tests --skip-write-modules -j1 TARGET_PRODUCT=aosp_cf_x86_64_phone TARGET_BUILD_VARIANT=userdebug ALLOW_MISSING_DEPENDENCIES=true BUILD_BROKEN_DISABLE_BAZEL=1 nothing
        gzip out/soong/modules_deps.json
        df -h && du -ah -d1 out && du -ah -d1 out/soong

    - name: Archive modules_deps
      uses: actions/upload-artifact@v3
      with:
        name: modules_deps.json.gz
        path: |
          aosp/out/soong/modules_deps.json

    - name: Archive repo
      uses: actions/upload-artifact@v3
      with:
        name: android12-gsi
        path: |
          android12-gsi.tar.xz

