# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Android Soong build CI

on: [ push ]

jobs:
  download:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run download
    - run: gzip -d *.gz
    - run: mkdir -p out/soong && mv build-aosp_x86_64-package.ninja out && mv build-aosp_x86_64.ninja out && mv build.ninja out/soong
    - run: git clone --depth=1 https://android.googlesource.com/platform/prebuilts/build-tools
    #- run: git clone --filter=tree:0 --single-branch --no-tags https://android.googlesource.com/platform/prebuilts/build-tools
    - run: ./build-tools/linux-x86/bin/ninja -v -f combined-aosp_x86_64.ninja -t query systemimage
    - run: ./build-tools/linux-x86/bin/ninja -v -f combined-aosp_x86_64.ninja -t commands systemimage > systemimage.sh
    - run: ./build-tools/linux-x86/bin/ninja -v -f combined-aosp_x86_64.ninja -t targets > targets.txt
    - run: ./build-tools/linux-x86/bin/ninja -v -f combined-aosp_x86_64.ninja -t graph > graph.txt
    - run: ./build-tools/linux-x86/bin/ninja -v -f combined-aosp_x86_64.ninja -t commands ramdisk > ramdisk.sh

    - name: Archive output
      uses: actions/upload-artifact@v3
      with:
        name: output
        path: |
          installed-files-root.txt 
          installed-files-ramdisk.txt 
          installed-files.txt
          systemimage.sh
          targets.txt
          graph.txt
          ramdisk.sh
          module-info.json
          branches.txt
          status.txt
          manifest*.xml

#      local_manifest.xml
#      sync.sh
#- run: ./build-tools/linux-x86/bin/ninja -v -f combined-aosp_x86_64.ninja -t commands sync > sync.sh
#- run: find . -name 'manifest*.xml' | xargs python filter-projects.py
#- run: ./build-tools/linux-x86/bin/ninja -v -f combined-aosp_x86_64.ninja -t query out/target/product/generic_x86_64/obj/PACKAGING/systemimage_intermediates/system.img
